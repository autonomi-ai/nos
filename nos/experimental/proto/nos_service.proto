syntax = "proto3";

import "google/protobuf/empty.proto";

package nos.inference;


message Embedding {
  repeated float embedding = 1;
}

message ModelListResponse {
  repeated string models = 1;
}

message TextToVecRequest {
  string model_name = 1;
  string text = 2;
}

message TextToVecResponse {
  Embedding embedding = 1;
}


message InitModelRequest {
  string model_name = 1;

  // Optional parameters
  optional int32 min_replicas = 2;
  optional int32 max_replicas = 3;
}


message InitModelResponse {
  string result = 1;
}

message InferenceRequest {
  string method = 1;
  string model_name = 2;
  string text = 3;
}


message InferenceResponse {
  bytes result = 1;
}

// Service definition
service InferenceService {
  // List available models from Hugging Face Hub
  rpc ListModels(google.protobuf.Empty) returns (ModelListResponse) {};

  // Load model from Hugging Face Hub
  rpc InitModel(InitModelRequest) returns (InitModelResponse) {}

  // Perform text-to-vector prediction
  rpc Predict(InferenceRequest) returns (InferenceResponse) {}
}
